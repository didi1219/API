{"openapi":"3.0.0","info":{"title":"API","version":"1.0.0"},"paths":{"/category/{id}":{"get":{"summary":"Fetching an existing category","description":"This route fetches an existing category.","tags":["Category"],"parameters":[{"in":"path","name":"id","schema":{"type":"integer"},"required":true,"description":"Numeric ID of the category to get"}],"responses":{"200":{"description":"Successfully retrieved the category.","content":{"application/json":{"schema":{"$ref":"#/components/responses/getCategory"}}}},"404":{"description":"Category not found."},"500":{"description":"Server error."}}},"delete":{"summary":"Delete an existing category","description":"This route deletes an existing category. The user must have admin privileges to perform this action.","security":[{"bearerAuth":[]}],"tags":["Category"],"parameters":[{"in":"path","name":"id","required":true,"description":"The ID of the category to delete","schema":{"type":"integer"}}],"responses":{"204":{"description":"Category successfully deleted"},"400":{"description":"Bad request - Invalid ID or data"},"401":{"description":"Unauthorized - Invalid or missing token"},"403":{"description":"Forbidden - Admin role required (this check is performed by the `admin` middleware)"},"500":{"description":"Internal server error"}}}},"/category/":{"post":{"summary":"Create a new category","description":"This route creates a new category. The user must have admin privileges to perform this action.","security":[{"bearerAuth":[]}],"tags":["Category"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryToAddSchema"}}}},"responses":{"201":{"description":"Category successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"ID of the newly created category"}}}}}},"400":{"description":"Bad request - Validation failed or invalid input"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/mustBeAdmin"},"500":{"description":"Internal server error"}}},"patch":{"summary":"Update an existing category","description":"This route updates an existing category. The user must have admin privileges to perform this action.","security":[{"bearerAuth":[]}],"tags":["Category"],"requestBody":{"required":true,"description":"The data required to update an existing category. You must provide a valid ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryToUpdateSchema"}}}},"responses":{"204":{"description":"Category successfully updated"},"400":{"description":"Bad request - Validation failed or invalid input"},"403":{"description":"Forbidden - Admin role required (this check is performed by the `admin` middleware)"},"404":{"description":"Category not found"},"500":{"description":"Internal server error"}}}},"/event/id/{id}":{"get":{"summary":"Fetch an existing event","description":"This route fetch an existing event.","tags":["Event"],"parameters":[{"in":"path","name":"id","schema":{"$ref":"#/components/schemas/EventID"},"required":true,"description":"The unique identifier of the event to retrieve."}],"responses":{"200":{"description":"Successfully retrieved the event with the given ID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Event"}}}},"400":{"description":"Invalid event ID format."},"404":{"description":"Event not found for the given ID."},"500":{"description":"Internal server error."}}}},"/event/delete/{id}":{"delete":{"summary":"Delete an existing event","description":"This route delete an existing event.","security":[{"bearerAuth":[]}],"tags":["Event"],"parameters":[{"in":"path","name":"id","schema":{"$ref":"#/components/schemas/EventID"},"required":true,"description":"The unique identifier of the event to retrieve."}],"responses":{"204":{"description":"Event successfully deleted"},"400":{"description":"Bad request - Validation failed or invalid input"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/mustBeAdmin"},"500":{"description":"Internal server error"}}}},"/event/":{"post":{"summary":"Crete a new event","description":"This route create a new event.","security":[{"bearerAuth":[]}],"tags":["Event"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventToAddSchema"}}}},"responses":{"201":{"description":"Event successfully created","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"ID of the newly created category"}}}}}},"400":{"description":"Bad request - Validation failed or invalid input"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/mustBeAdmin"},"500":{"description":"Internal server error"}}},"patch":{"summary":"Update an existing Event","description":"This route updates an existing event. The user must have admin privileges to perform this action.","security":[{"bearerAuth":[]}],"tags":["Event"],"requestBody":{"required":true,"description":"The data required to update an existing Event. You must provide a valid ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventToUpDateSchema"}}}},"responses":{"204":{"description":"Event successfully deleted"},"400":{"description":"Bad request - Validation failed or invalid input"},"401":{"$ref":"#/components/responses/UnauthorizedError"},"403":{"$ref":"#/components/responses/mustBeAdmin"},"404":{"description":"Event not found"},"500":{"description":"Internal server error"}}}}},"components":{"schemas":{"Category":{"type":"object","properties":{"id":{"type":"integer","description":"The unique identifier of the category."},"title":{"type":"string","description":"The title of the category."},"icon_component_name":{"type":"string","description":"The name of the component representing the category's icon."},"icon_name":{"type":"string","description":"The name of the icon representing the category."}}},"Event":{"type":"object","properties":{"id":{"type":"integer","description":"Unique identifier for the event"},"title":{"type":"string","minLength":1,"maxLength":250,"description":"Title of the event"},"description":{"type":"string","maxLength":250,"description":"Description of the event"},"event_start":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"Start date and time of the event in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"event_end":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"End date and time of the event in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"street_number":{"type":"string","minLength":1,"maxLength":250,"description":"Street number or address of the event location"},"is_private":{"type":"boolean","description":"Indicates whether the event is private or public"},"picture_path":{"type":"string","maxLength":250,"description":"Path to the event image or picture"},"location_id":{"type":"integer","description":"ID of the location where the event takes place"},"category_id":{"type":"integer","description":"ID of the category to which the event belongs"}},"required":["id","title","event_start","event_end","location_id","category_id"]},"CategoryToAddSchema":{"type":"object","properties":{"title":{"type":"string","minLength":1,"maxLength":250,"description":"The title of the category."},"icon_component_name":{"type":"string","minLength":1,"maxLength":250,"description":"The icon component name of the category."},"icon_name":{"type":"string","minLength":1,"maxLength":250,"description":"The icon name of the category."}},"required":["title","icon_component_name","icon_name"]},"CategoryToUpdateSchema":{"type":"object","properties":{"id":{"type":"integer","description":"The ID of the category to update."},"title":{"type":"string","minLength":1,"maxLength":250,"description":"The title of the category (optional)."},"icon_component_name":{"type":"string","minLength":1,"maxLength":250,"description":"The icon component name of the category (optional)."},"icon_name":{"type":"string","minLength":1,"maxLength":250,"description":"The icon name of the category (optional)."}},"required":["id"]},"EventID":{"type":"integer","description":"ID of the event to be retrieved, updated, or deleted"},"EventToAddSchema":{"type":"object","properties":{"title":{"type":"string","minLength":1,"maxLength":250},"description":{"type":"string","maxLength":250},"event_start":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"Event start date and time in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"event_end":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"Event end date and time in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"street_number":{"type":"string","minLength":1,"maxLength":250},"is_private":{"type":"boolean"},"picture_path":{"type":"string","maxLength":250},"location_id":{"type":"integer"},"category_id":{"type":"integer"}},"required":["title","event_start","event_end","street_number","is_private","picture_path","location_id","category_id"]},"EventToUpDateSchema":{"type":"object","properties":{"title":{"type":"string","maxLength":250},"description":{"type":"string","maxLength":250},"event_start":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"Event start date and time in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"event_end":{"type":"string","pattern":"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$|^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$","description":"Event end date and time in the format YYYY-MM-DDTHH:MM or YYYY-MM-DD HH:MM"},"street_number":{"type":"string","maxLength":250},"is_private":{"type":"boolean"},"picture_path":{"type":"string","maxLength":250},"location_id":{"type":"integer"},"category_id":{"type":"integer"}},"required":["id"]}},"responses":{"getCategory":{"description":"Return category","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},"getEvent":{"description":"Return event","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Event"}}}},"mustBeAdmin":{"description":"The action must be realized by a Admin","content":{"text/plain":{"schema":{"type":"string"}}}},"UnauthorizedError":{"description":"JWT is missing or invalid","content":{"text/plain":{"schema":{"type":"string"}}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"tags":[]}